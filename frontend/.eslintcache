[{"/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/index.js":"1","/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/components/Main.js":"2","/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/redux/ActionTypes.js":"3","/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/redux/actionCreators/WashingtonActionCreator.js":"4","/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/App.js":"5","/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/components/Chart.js":"6","/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/shared/urls.js":"7","/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/components/Table.js":"8","/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/reportWebVitals.js":"9","/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/redux/reducers/washingtonReducer.js":"10","/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/redux/configureStore.js":"11","/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/components/Layout.js":"12"},{"size":709,"mtime":1610157476564,"results":"13","hashOfConfig":"14"},{"size":5464,"mtime":1610161549078,"results":"15","hashOfConfig":"14"},{"size":932,"mtime":1606866982000,"results":"16","hashOfConfig":"14"},{"size":4884,"mtime":1610162197955,"results":"17","hashOfConfig":"14"},{"size":376,"mtime":1610160850793,"results":"18","hashOfConfig":"14"},{"size":2744,"mtime":1610161959815,"results":"19","hashOfConfig":"14"},{"size":49,"mtime":1610162140774,"results":"20","hashOfConfig":"14"},{"size":2025,"mtime":1610153933596,"results":"21","hashOfConfig":"14"},{"size":362,"mtime":1609970471480,"results":"22","hashOfConfig":"14"},{"size":2068,"mtime":1606867546000,"results":"23","hashOfConfig":"14"},{"size":412,"mtime":1606849382000,"results":"24","hashOfConfig":"14"},{"size":240,"mtime":1610161222057,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"16xd2l9",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/index.js",[],["55","56"],"/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/components/Main.js",["57"],"import React from \"react\";\nimport { connect } from 'react-redux';\nimport  { tagManagerId } from '../shared/urls';\nimport Table from './Table';\nimport Chart from './Chart';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { fetchAllWashingtonData, fetchAllWashingtonCounties, fetchSelectedCounty, fetchCompany } from '../redux/actionCreators/WashingtonActionCreator';\n\n\nconst mapStateToProps = state => {\n    return {\n        allWAData: state.washington.washingtonData,\n        countyList: state.washington.washingtonCounties,\n        countyCompaniesData: state.washington.countyCompaniesData,\n        companyInfo: state.washington.waCompanyInfo\n    };\n};\n\nconst mapDispatchToProps = {\n    fetchAllWashingtonData: () => (fetchAllWashingtonData()),\n    fetchAllWashingtonCounties: () => (fetchAllWashingtonCounties()),\n    fetchSelectedCounty: (newCountyValue) => (fetchSelectedCounty(newCountyValue)),\n    fetchCompany: (newCompanyValueId) => (fetchCompany(newCompanyValueId))\n};\n\n\nclass Main extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            countyDropDownOpen: false,\n            companyDropDownOpen: false,\n            tableCompanyInfo: []\n        };\n    }\n\n\n    async componentDidMount() {\n        this.props.fetchAllWashingtonData();\n        this.props.fetchAllWashingtonCounties();\n    }\n\n\n    toggleCountyDropDown = () => {\n        this.setState(prevState => ({\n            countyDropDownOpen: !prevState.countyDropDownOpen\n        }));\n    }\n\n    toggleCompanyDropDown = () => {\n        this.setState(prevState => ({\n            companyDropDownOpen: !prevState.companyDropDownOpen\n        }));\n    }\n\n    async onCountySelect(newCountyValue) {\n        this.props.fetchSelectedCounty(newCountyValue.county);\n    }\n\n    async onCompanySelect(newCompanyValue) {\n        this.props.fetchCompany(newCompanyValue.id);\n    }\n\n\n\n    render() {\n\n        return (\n            <Container fluid=\"sm\">\n                <div className=\"App\">\n                    <div>\n                         <title>Budding Trends: Cannabis Data Analytics Tools</title>\n                    </div>\n                    <div>\n                        <p>Note: Retail store is only listed if it has reported sales</p>\n                    </div>\n                    <div>\n                        <Row>\n                            <div className=\"county-dropdown\">\n                                <Col sm={12} md={3} lg={2}>\n                                    <Dropdown isOpen={this.state.countyDropDownOpen} toggle={this.toggleCountyDropDown} bg=\"dark\" variant=\"dark\">\n                                        <DropdownToggle caret id=\"county-dropdown\" bg=\"dark\" variant=\"dark\">\n                                            Select County\n                                        </DropdownToggle>\n                                        <DropdownMenu bg=\"dark\" variant=\"dark\">\n                                            {this.props.countyList.map((eachCounty, index) => \n                                                <div key={index}>\n                                                    <DropdownItem onClick={() => this.onCountySelect(eachCounty)}>{eachCounty.county}</DropdownItem>\n                                                </div>\n                                             )}\n                                        </DropdownMenu>\n                                        \n                                    </Dropdown>\n                                </Col>\n                            </div>\n                            <div className=\"company-dropdown\">\n                                <Col sm={12} md={3} lg={2}>\n                                    <Dropdown isOpen={this.state.companyDropDownOpen} toggle={this.toggleCompanyDropDown} bg=\"dark\" variant=\"dark\">\n                                        <DropdownToggle caret id=\"company-dropdown\" bg=\"dark\" variant=\"dark\">\n                                            Select Company\n                                        </DropdownToggle>\n                                        <DropdownMenu bg=\"dark\" variant=\"dark\">\n                                            {this.props.countyCompaniesData.map((eachCompany, index) => \n                                                <div key={index}>\n                                                    <DropdownItem onClick={() => this.onCompanySelect(eachCompany)}>{eachCompany.name}</DropdownItem>\n                                                </div>\n                                            )}\n                                        </DropdownMenu>    \n                                    </Dropdown>\n                                </Col>\n                            </div>\n                        </Row>\n                    </div>\n                    \n                    <div>\n                        <br />\n                    </div>\n                    <div>\n                        <Chart companyInfo={this.props.companyInfo} />\n                    </div>\n                    <div>\n                        <br />\n                    </div>\n                    <div>\n                        <Table allWAData={this.props.allWAData} />\n                    </div>\n                    \n                </div>\n            </Container>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n\n","/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/redux/ActionTypes.js",[],"/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/redux/actionCreators/WashingtonActionCreator.js",[],"/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/App.js",[],"/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/components/Chart.js",[],["58","59"],"/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/shared/urls.js",[],"/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/components/Table.js",["60"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport  { tagManagerId } from '../shared/urls';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport styled from 'styled-components';\nimport { fetchCompany } from '../redux/actionCreators/WashingtonActionCreator';\n\n\nconst Styles = styled.div`\n    .table {\n        overflow: auto;\n        table-layout: auto !important;\n    },\n    .react-bootstrap-table table {\n        table-layout: auto;\n    }\n`;\n\nconst mapStateToProps = state => {\n    return {\n        companyInfo: state.washington.waCompanyInfo\n    };\n};\n\nconst mapDispatchToProps = {\n    fetchCompany: (newCompanyValueId) => (fetchCompany(newCompanyValueId))\n};\n\n\nclass Table extends React.Component {\n\n  constructor(props) {\n\n        super(props);\n\n        this.state = {\n          columns: [\n            { dataField: \"name\", text: \"Name  \", filter: textFilter()},\n            { dataField: \"license\", text: \"License \"},\n            { dataField: \"county\", text: \"County\"}\n          ]\n        };\n    }\n\n\n  render() {\n\n    const rowEvents = {\n      onClick: (e, row) => {\n        this.props.fetchCompany(row.id);\n      }\n    };\n\n    return (\n      <Styles>\n        <div className=\"App\">\n          <div className=\"table\">\n            <BootstrapTable\n              bootstrap4\n              wrapperClasses=\"table-responsive\"\n              rowClasses=\"text-nowrap\"\n              striped=\"dark\"\n              hover\n              keyField=\"id\"\n              data={this.props.allWAData}\n              columns={this.state.columns}\n              pagination={paginationFactory()}\n              filter={ filterFactory() }\n              sort={ { dataField: ['sales'], order: 'asc' } }\n              rowEvents={rowEvents}\n            />\n          </div>\n        </div>\n      </Styles>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/reportWebVitals.js",[],"/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/redux/reducers/washingtonReducer.js",[],"/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/redux/configureStore.js",[],["61","62"],"/Users/brentrucker/Desktop/fullstackReactNode/frontend/src/components/Layout.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":3,"column":11,"nodeType":"69","messageId":"70","endLine":3,"endColumn":23},{"ruleId":"63","replacedBy":"71"},{"ruleId":"65","replacedBy":"72"},{"ruleId":"67","severity":1,"message":"68","line":3,"column":11,"nodeType":"69","messageId":"70","endLine":3,"endColumn":23},{"ruleId":"63","replacedBy":"73"},{"ruleId":"65","replacedBy":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'tagManagerId' is defined but never used.","Identifier","unusedVar",["75"],["76"],["75"],["76"],"no-global-assign","no-unsafe-negation"]